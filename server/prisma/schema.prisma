generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/MD04-dtb"
}

model users {
  id           Int            @id @default(autoincrement())
  userName     String         @unique @db.Char(255)
  email        String         @unique @db.Char(255)
  password     String         @db.Char(255)
  emailConfirm Boolean        @default(false)
  status       Boolean        @default(true)
  role         UserRole       @default(member)
  createAt     String
  updateAt     String
  avatar       String         @db.Text
  address      address[]
  user_ip_list user_ip_list[]
  receipts     receipts[]
}

model user_ip_list {
  id         Int     @id @default(autoincrement())
  ip         String  @db.Char(255)
  status     Boolean @default(true)
  userId     Int
  createAt   String
  deviceName String
  users      users?  @relation(fields: [userId], references: [id])

  @@index([userId], map: "user_ip_list_userId_fkey")
}

model address {
  id        Int    @id @default(autoincrement())
  title     String @unique @db.Char(255)
  userId    Int
  users     users? @relation(fields: [userId], references: [id])

  @@index([userId], map: "address_userId_fkey")
}

model categories {
  id       Int        @id @default(autoincrement())
  title    String     @unique @db.Char(255)
  codeName String     @unique @db.Char(255)
  status   Boolean    @default(true)
  product  products[]
}

model brands {
  id       Int        @id @default(autoincrement())
  title    String     @unique @db.Char(255)
  codeName String     @unique @db.Char(255)
  status   Boolean    @default(true)
  product  products[]
}

model computer_specifications {
  id          Int     @id @default(autoincrement())
  brand       String
  category    String
  name        String
  guarantee   String?
  warrantyDes String?
  series      String?
  partNum     String?
  color       String?
  demand      String?
  CPUgen      String?
  CPU         String?
  screen      String?
  graphic     String?
  RAM         String?
  storage     String?
  storagePort String?
  M2Port      String?
  outputPort  String?
  wireless    String?
  keyboard    String?
  system      String?
  size        String?
  battery     String?
  mass        String?
  mainboard   String?
  VGA         String?
}

model products {
  id         Int               @id @default(autoincrement())
  name       String
  price      Int
  des        String            @db.LongText
  status     Boolean           @default(true)
  avatar     String            @db.LongText
  categoryId Int
  category   categories?       @relation(fields: [categoryId], references: [id])
  brandId    Int
  brand      brands?           @relation(fields: [brandId], references: [id])
  detail     String?           @db.LongText
  pictures   pictures[]
  sold       receipt_details[]

  @@index([categoryId], map: "products_categoryId_fkey")
}

model pictures {
  id        Int       @id @default(autoincrement())
  url       String    @db.LongText
  productId Int
  product   products? @relation(fields: [productId], references: [id])

  @@index([productId], map: "pictures_productId_fkey")
}

model receipts {
  id         Int               @id @default(autoincrement())
  total      Int               @default(0)
  createAt   String
  updateAt   String
  paid       Boolean           @default(false)
  paidAt     String?
  payMode    payMode?          @default(cash)
  userId     Int
  status     ReceiptStatus     @default(shopping)
  pending    String?
  acceptAt   String?
  shippingAt String?
  doneAt     String?
  user       users?            @relation(fields: [userId], references: [id])
  usersId    Int?
  detail     receipt_details[]

  @@index([userId], map: "receipts_userId_fkey")
}

model receipt_details {
  id        Int      @id @default(autoincrement())
  receiptId Int
  productId Int
  quantity  Int
  note      String   @default("")
  product   products @relation(fields: [productId], references: [id])
  receipt   receipts @relation(fields: [receiptId], references: [id])

  @@index([productId], map: "receipt_details_productId_fkey")
  @@index([receiptId], map: "receipt_details_receiptId_fkey")
}

enum ReceiptStatus {
  shopping
  pending
  accepted
  shipping
  done
  delete
}

enum payMode {
  zalo_pay
  cash
}

enum UserRole {
  member
  admin
  master
}
